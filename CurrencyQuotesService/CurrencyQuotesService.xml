<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CurrencyQuotesService</name>
    </assembly>
    <members>
        <member name="T:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes">
            <summary>
            <see cref="T:GlitchedPolygons.Services.CurrencyQuotes.ICurrencyQuotes"/> implementation that makes use of the CurrencyLayer.com API.<para> </para>
            Stores the exchange quotes inside a file. If no file r/w activity is wished, use the <see cref="T:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotesSingleton"/> implementation!
            </summary>
        </member>
        <member name="F:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes.DEFAULT_JSON">
            <summary>
            The default currency exchange data json.<para> </para>
            It's an example excerpt from the 7th of July 2018.
            </summary>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes.#ctor(GlitchedPolygons.Services.Bash.IBash,System.Boolean,System.Boolean,System.String,System.Int32,System.String[])">
            <summary>
            Creates a new <see cref="T:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes"/> instance.
            Please ensure that the parameters passed into this constructor are valid!
            </summary>
            <param name="bash">Bash command service. (Use the injected service by calling provider.GetService)</param>
            <param name="isDevEnvironment">Are we currently in a dev env? (localhost?).</param>
            <param name="isLinux">Will this code run on Linux OS?</param>
            <param name="currencyLayerApiKey">The currencylayer.com API key (REMINDER: please don't check any API keys into source control!).</param>
            <param name="refreshRate">Refresh the currency exchange quotes every {amount} minutes.</param>
            <param name="currencies">All ISO names of the currencies to query (e.g. CHF, EUR, CAD, ...).</param>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes.Refresh">
            <summary>
            Refreshes the current server's currency conversion quotes
            (retrieving fresh data from the exchange web api).<para> </para>
            Should return <c>true</c> if the refresh action was successful, and <c>false</c> if something went wrong.
            </summary>
            <returns>Whether the refresh action was successful or not.</returns>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes.GetConversionQuote(System.String)">
            <summary>
            Gets the specified currency conversion quote (with 1 USD as base).
            </summary>
            <param name="currency">The ISO name of the currency.</param>
            <returns>The USD-to-currency quote if it could be found; <c>-1.0f</c> if no matching quote has been found.</returns>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes.ConvertFromUSD(System.String,System.Single)">
            <summary>
            Converts the specified amount of USD (default is 1) into the target currency.<para> </para>
            Base currency is always USD due to the fact that the free plan of 
            CurrencyLayer API does not allow customizing the source currency for the requests.
            </summary>
            <param name="currency">The ISO name of the currency.</param>
            <param name="amount">How many USD to convert.</param>
            <returns>The converted amount; <c>-1.0f</c> if the conversion failed in some way.</returns>
        </member>
        <member name="T:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotesSingleton">
            <summary>
            <see cref="T:GlitchedPolygons.Services.CurrencyQuotes.ICurrencyQuotes"/> singleton where service lifetime == app lifetime
            that makes use of the CurrencyLayer.com API.<para> </para>
            Keeps the currency exchange quotes in memory instead of in a file...
            </summary>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotesSingleton.#ctor(System.String,System.Int32,System.String[])">
            <summary>
            Creates a new <see cref="T:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotes"/> singleton instance (keeps the currencies in memory instead of in a file).
            Please ensure that the parameters passed into this constructor are valid!
            </summary>
            <param name="currencyLayerApiKey">The currencylayer.com API key (REMINDER: please don't check any API keys into source control!).</param>
            <param name="refreshRate">Refresh the currency exchange quotes every {amount} minutes.</param>
            <param name="currencies">All ISO names of the currencies to query (e.g. CHF, EUR, CAD, ...).</param>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotesSingleton.Refresh">
            <summary>
            Refreshes the current server's currency conversion quotes
            (retrieving fresh data from the exchange web api).<para> </para>
            Should return <c>true</c> if the refresh action was successful, and <c>false</c> if something went wrong.
            </summary>
            <returns>Whether the refresh action was successful or not.</returns>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotesSingleton.GetConversionQuote(System.String)">
            <summary>
            Gets the specified currency conversion quote (with 1 USD as base).
            </summary>
            <param name="currency">The ISO name of the currency.</param>
            <returns>The USD-to-currency quote if it could be found; <c>-1.0f</c> if no matching quote has been found.</returns>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.CurrencyLayerQuotesSingleton.ConvertFromUSD(System.String,System.Single)">
            <summary>
            Converts the specified amount of USD (default is 1) into the target currency.<para> </para>
            Base currency is always USD due to the fact that the free plan of 
            CurrencyLayer API does not allow customizing the source currency for the requests.
            </summary>
            <param name="currency">The ISO name of the currency.</param>
            <param name="amount">How many USD to convert.</param>
            <returns>The converted amount; <c>-1.0f</c> if the conversion failed in some way.</returns>
        </member>
        <member name="T:GlitchedPolygons.Services.CurrencyQuotes.ICurrencyQuotes">
            <summary>
            Online currency quotes service for retrieving live exchange rates.<para> </para>
            Use this sparingly, as most free providers have hard limits on the amount of
            requests per month/day/whatever...
            </summary>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.ICurrencyQuotes.Refresh">
            <summary>
            Refreshes the current server's currency conversion quotes
            (retrieving fresh data from the exchange web api).<para> </para>
            Should return <c>true</c> if the refresh action was successful, and <c>false</c> if something went wrong.
            </summary>
            <returns>Whether the refresh action was successful or not.</returns>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.ICurrencyQuotes.GetConversionQuote(System.String)">
            <summary>
            Gets the specified currency conversion quote (with 1 USD as base).
            </summary>
            <param name="currency">The ISO name of the currency.</param>
            <returns>The USD-to-currency quote if it could be found; <c>-1.0f</c> if no matching quote has been found.</returns>
        </member>
        <member name="M:GlitchedPolygons.Services.CurrencyQuotes.ICurrencyQuotes.ConvertFromUSD(System.String,System.Single)">
            <summary>
            Converts the specified amount of USD (default is 1) into the target currency.
            </summary>
            <param name="currency">The ISO name of the currency.</param>
            <param name="amount">How many USD to convert.</param>
            <returns>The converted amount; <c>-1.0f</c> if the conversion failed in some way.</returns>
        </member>
    </members>
</doc>
